// 기본 자료형, 복합 자료형
1. 기본 자료형
  ex) 숫자, 문자열, bool
  - stack에 저장(기본 자료형은 직접 저장, 복합 자료형은 해당 자료형의 주소 저장)

2. 복합 자료형
  ex) 배열, 함수, 객체
  - heap에 저장(복합 자료형의 본체 저장)

  * 참고 *
  - 스택 : 기본 자료형과 주소 등을 저장하는 메모리 공간
  - 힙 : 복합 자료형을 저장하는 메모리 공간
  - 주소 : 저장된 자료의 위치
  - 레퍼런스 하다 : 스택의 주소가 힙의 자료를 가리키는 것
  - 레퍼런스 변수 : 스택에 저장된 것중에 주소가 저장된 변수

// 비파괴적 처리와 파괴적 처리
1. 비파괴적 처리 -> 어떠한 처리 후 원본 불변
  ex)
  > let a = 10
    let B = 20
  undefined
  > a + b // 비파괴적 처리
  30
  > a
  10
  > b
  20

2. 파괴적 처리 -> 어떠한 처리 후 원본 변경
  ex)
  > let c = [1,2,3]
  undefined
  > c.push(4) // 파괴적 처리
  4
  > c
  (4) [1,2,3,4]

3. 비파괴적 처리와 파괴적 처리 구분 이유
  - 메모리 절약

// const의 제한
1. const -> 스택에 있는 값 변경할 경우 오류 발생
         -> 힙에 존재하는 레퍼런스 된 복합 자료형 조작에는 문제 없음